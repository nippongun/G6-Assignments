void zmain(void)
 { 
    struct sensors_ dig;
    TickType_t start;
    TickType_t end;
    int time;
    int time1;
    bool onLine = 1;
    reflectance_start();
    motor_start();
    IR_Start();
    int count = 0;
    reflectance_set_threshold(9500, 9000, 11000, 11000, 9000, 9500);
    //press the button to move the robot to the black line
    while(SW1_Read() != 0)
    {
        vTaskDelay(100);
    }
    start = xTaskGetTickCount();
    reflectance_digital(&dig);
    while((dig.l3 == 0 || dig.r3 == 0) && (dig.l1 == 1 || dig.r1 == 1))
    {
        motor_forward(100,0);
        reflectance_digital(&dig);
    }
    if((count == 0) && (dig.l3 == 1) && (dig.l2 == 1) && (dig.r2 == 1) && (dig.r3 == 1))
    {
        reflectance_digital(&dig); 
        count++;
        while(dig.l3 == 1 || dig.r3 == 1)
        {
            motor_forward(100,0);
            reflectance_digital(&dig); 
        }
    }
    //when the robot sees a white line it stops and wait for IR signal
    motor_forward(0,0);
    print_mqtt("Zumo061/ready", "line");
    IR_wait();    
    end = xTaskGetTickCount();
    time1 = end - start;
    print_mqtt("Zumo061/start", "%d",time1);
    while(1) 
    {
        reflectance_digital(&dig);
        if((dig.l1 == 0 && dig.r1 == 0) && onLine)
        {
            print_mqtt("Zumo061/miss", "%d",xTaskGetTickCount());
            onLine = 0;
        }
        if((dig.l1 == 1 && dig.r1 == 1) && !onLine)
        {
            print_mqtt("Zumo061/line", "%d",xTaskGetTickCount());
            onLine = 1;
        }        
        //forward
        //if loop to show when it comes back to the line
        reflectance_digital(&dig);
        while((dig.l1 == 1 && dig.r1 == 1) && (dig.r2 == 0 || dig.l2 == 0))
        {       
            reflectance_digital(&dig);
            motor_forward(187,0);
        }
        //turn right
        //if loop to show when it misses the line
            
        while((dig.l1 == 0)&&(dig.r2 == 1))
        {
            reflectance_digital(&dig);
            motor_turn(240,0,0);
        }
        //turn left
        //if loop to show when it misses the line
        while((dig.r1 == 0)&&(dig.l2 == 1))    
        {
            reflectance_digital(&dig);        
            motor_turn(0,240,0);
        }
       
        //stop
        //stops on the finish line and gives the total time since the button press
        //gives also the time from the start line
        if((count == 1)&&(dig.l3 == 1) && (dig.l2 == 1) && (dig.r2 == 1) && (dig.r3 == 1))
        {
            reflectance_digital(&dig); 
            count++;
            while((dig.l3 == 1) && (dig.l2 == 1) && (dig.r2 == 1) && (dig.r3 == 1))
        {
            reflectance_digital(&dig); 
            motor_forward(200,0);
        }
        }
        reflectance_digital(&dig); 
        if((count == 2)&&(dig.l3 == 1) && (dig.l2 == 1) && (dig.r2 == 1) && (dig.r3 == 1))
        {
            reflectance_digital(&dig); 
            end = xTaskGetTickCount();
            time = end - start;
            print_mqtt("Zumo061/end", "%d",time);
            print_mqtt("Zumo061/time", "%d",time - time1);
            reflectance_digital(&dig); 
            while((dig.l3 == 1) && (dig.l2 == 1) && (dig.r2 == 1) && (dig.r3 == 1))
            {
            reflectance_digital(&dig);
            motor_stop();
            }
        }
    }
}